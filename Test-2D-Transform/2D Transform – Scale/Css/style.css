/* 
2D Transform : les transformations li kitw9a3 fi plan (x , y)
- scaleX  =>  scaling element in direction x
    - default value is transform:scaleX(1);
    - syntax : transform : scaleX(value);

- scaleY => scaling element in direction y
    - default value is transform:scaleY(1);
    - syntax : transform : scaleY(value);


- scale  is a shorthand for scaleX and scaleY
    - default value is transform:scale(1);
    - syntax : transform:scale(value1 , value2);
    - if second value is omited so this value equal first value

*/
* {
    box-sizing: border-box;
}

body {
    margin: 0;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    width: 200px;
    height: 200px;
    background-color: #eee;
}

.container>div {
    width: 90%;
    height: 90%;
    background-color: rgba(250, 163, 132, 0.5);
    font-weight: bold;
    margin-top: 5%;
    margin-left: 5%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: 1s;
    /* transform: scaleX(1); */
    /* transform: scaleX(1.5); */
    /* transform: scaleX(2); */
    /* transform-origin: 0% 0%; */
    /* transform-origin: 50% 0%; */
    /* transform-origin: 100% 0%; */




    /* transform: scaleY(1); */
    /* transform: scaleY(1.5); */
    /* transform: scaleY(2); */
    /* transform-origin: 0% 0%; */
    /* transform-origin: 0% 50%; */
    /* transform-origin: 0% 100%; */



    /* transform: scale(2, 2); */
    /* transform: scale(2); */

    /*  flip element */

    /* transform: scaleX(-1); */
    /* transform: scaleY(-1); */

    /* transform: scale(-1, -1); */
    transform: scale(-1);
}